{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\takem\\\\Documents\\\\UNIVER\\\\React\\\\tic-tac-toe\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  const [square, setSquare] = useState(Array(9).fill(null));\n  const [X, setX] = useState(true);\n  const winner = calculateWinner(square);\n  let status;\n\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Player Turn: ' + (X ? 'X' : 'O');\n  }\n\n  const renderSquare = i => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: square[i],\n      onClick: () => handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleClick = i => {\n    const squares = square.slice();\n\n    if (squares[i] === null) {\n      squares[i] = X ? 'X' : 'O';\n      setSquare(squares);\n      setX(!X);\n    } else {\n      alert(\"Can't do that\");\n    }\n  };\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"L3Swyjdt0b+2KUQCQXtbeWwXSOk=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/takem/Documents/UNIVER/React/tic-tac-toe/src/components/Board.js"],"names":["React","useState","Square","Board","square","setSquare","Array","fill","X","setX","winner","calculateWinner","status","renderSquare","i","handleClick","squares","slice","alert","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Square from './Square';\nimport '../index.css';\n\nfunction Board() {\n\n    const [square, setSquare] = useState(Array(9).fill(null));\n    const [X, setX] = useState(true);\n\n    const winner = calculateWinner(square);\n    let status;\n    if (winner) {\n        status = 'Winner: ' + winner;\n    } else {\n        status = 'Player Turn: ' + (X ? 'X' : 'O');\n    }\n\n    const renderSquare = (i) => {\n        return (\n            <Square value={square[i]} onClick={() => handleClick(i)} />\n        )\n    }\n\n    const handleClick = (i) => {\n        const squares = square.slice();\n        if (squares[i] === null) {\n            squares[i] = X ? 'X' : 'O';\n            setSquare(squares);\n            setX(!X);\n        } else {\n            alert(\"Can't do that\")\n        }\n\n    }\n\n    function calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n\n        return null;\n    }\n\n    return (\n        <div className=\"board\">\n            <div className=\"board-row\">\n                {renderSquare(0)}\n                {renderSquare(1)}\n                {renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n                {renderSquare(3)}\n                {renderSquare(4)}\n                {renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n                {renderSquare(6)}\n                {renderSquare(7)}\n                {renderSquare(8)}\n            </div>\n\n            <h3>{status}</h3>\n        </div>\n    )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}